/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package carrentalsystem;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.util.List;
import java.time.LocalDate;

public class BookingDatabase extends javax.swing.JFrame {

    static User.admin user;
    DefaultTableModel model;
    final String BOOKING_FILE = dataIO.GET_BOOKING_FILE();
    final String CAR_FILE = dataIO.GET_CAR_FILE();
    final String USER_FILE = dataIO.GET_USER_FILE();
    
    public BookingDatabase(User.admin user) {
        BookingDatabase.user = user;
        initComponents();

        model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        List<Booking> booking = DatabaseManager.getAllBookings();
        populateBookingTable(booking);
        BookingTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = BookingTable.getSelectedRow();
                    if (selectedRow != -1) { 
                        int bookingId = (int) BookingTable.getValueAt(selectedRow, 0);
                        String carName = (String) BookingTable.getValueAt(selectedRow, 1);
                        String userEmail = (String) BookingTable.getValueAt(selectedRow, 2);
                        String status = (String) BookingTable.getValueAt(selectedRow, 3);
                        String paymentStatus = (String) BookingTable.getValueAt(selectedRow, 4);

                        int rowNumberInBooking = dataIO.rowNumber(bookingId, 1, BOOKING_FILE, 8);

                        LocalDate startDate = LocalDate.parse(dataIO.readData(rowNumberInBooking + 3, BOOKING_FILE));
                        LocalDate endDate = LocalDate.parse(dataIO.readData(rowNumberInBooking + 4, BOOKING_FILE));

                        int carId = Integer.parseInt(dataIO.readData(rowNumberInBooking + 1, BOOKING_FILE));
                        int rowNumberInCar = (int) dataIO.rowNumber(String.valueOf(carId), 1, CAR_FILE, 7);
                        int price = Integer.parseInt(dataIO.readData(rowNumberInCar + 3, CAR_FILE)); 
                        int days = (int) (endDate.toEpochDay() - startDate.toEpochDay());
                        int totalPayment = price * days;

                        bookingIdField.setText(String.valueOf(bookingId));
                        bookedCarField.setText(carName);
                        emailField.setText(userEmail);
                        statusField.setText(status);
                        PaymentStatusField.setSelectedItem(paymentStatus);
                        startDateField.setText(startDate.toString());
                        endDateField.setText(endDate.toString());
                        paymentField.setText("RM " +String.valueOf(totalPayment));
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookingTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        bookingIdField = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bookedCarField = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailField = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        paymentField = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        startDateField = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        endDateField = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        PaymentStatusField = new javax.swing.JComboBox<>();
        statusField = new javax.swing.JLabel();
        SaveButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Booking Database");

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(BookingTable);

        jLabel2.setText("Booking ID:");

        bookingIdField.setText("");

        jLabel3.setText("Booked Car:");

        bookedCarField.setText("");

        jLabel4.setText("User Email:");

        emailField.setText("");

        jLabel5.setText("Total Payment");

        paymentField.setText("");

        jLabel6.setText("Start Date");

        startDateField.setText("");

        jLabel7.setText("End Date:");

        endDateField.setText("");

        jLabel8.setText("Status:");

        jLabel9.setText("Payment Status:");

        PaymentStatusField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paid", "Unpaid" }));

        statusField.setText("");

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bookedCarField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(bookingIdField))
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5)
                            .addComponent(paymentField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PaymentStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingIdField)
                    .addComponent(emailField)
                    .addComponent(startDateField)
                    .addComponent(statusField)
                    .addComponent(SaveButton))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookedCarField)
                    .addComponent(paymentField)
                    .addComponent(endDateField)
                    .addComponent(PaymentStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteButton))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        if (!bookingIdField.getText().isEmpty()) {
            int bookingId = Integer.parseInt(bookingIdField.getText());
            int rowNumberInBooking = dataIO.rowNumber(bookingId, 1, BOOKING_FILE, 8);
            String paymentStatus = (String) PaymentStatusField.getSelectedItem();
            dataIO.overWriteData(paymentStatus, rowNumberInBooking + 6 , BOOKING_FILE);
            refreshBookingTable();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a booking to update", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        if (!bookingIdField.getText().isEmpty()) {
            int confirmDelete = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this booking?", "Delete Booking", JOptionPane.YES_NO_OPTION);
            if (confirmDelete == JOptionPane.YES_OPTION) {
                int bookingId = Integer.parseInt(bookingIdField.getText());
                int rowNumberInBooking = dataIO.rowNumber(bookingId, 1, BOOKING_FILE, 8);
                
                for (int i = 0; i < 8; i++) {
                    dataIO.deleteRow(rowNumberInBooking, BOOKING_FILE);
                }

                refreshBookingTable();
            }
            refreshBookingTable();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a booking to delete", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void refreshBookingTable() {
        List<Booking> booking = DatabaseManager.getAllBookings();
        populateBookingTable(booking);
    }

    private void populateBookingTable(List<Booking> bookings) {
        model.setRowCount(0); // Clear existing table data
        model.setColumnCount(0); // Reset column count

        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                // This causes all cells to be non-editable
                return false;
            }
        };
        model.addColumn("Booking ID");
        model.addColumn("Car Name");
        model.addColumn("User Email");
        model.addColumn("Status");
        model.addColumn("Payment Status");
    
        for (Booking booking : bookings) {
            int bookingId = booking.getBookingId();
            String status = booking.getStatus();
            String paymentStatus = booking.getPaymentStatus();

            int rowNumberInBooking = dataIO.rowNumber(bookingId, 1, BOOKING_FILE, 8);

            String carId = dataIO.readData(rowNumberInBooking + 1, BOOKING_FILE); 
            int rowNumberInCar = dataIO.rowNumber(carId, 1, CAR_FILE, 7);

            String carName = dataIO.readData(rowNumberInCar + 1, CAR_FILE);

            String userEmail = dataIO.readData(rowNumberInBooking + 2, BOOKING_FILE); 
    
    
            // Add row to table model with correct role displayed
            model.addRow(new Object[]{bookingId, carName, userEmail, status, paymentStatus});
        }
    
        BookingTable.setModel(model);
    
        // Allow row selection
        BookingTable.setRowSelectionAllowed(true);
    
        // Ensure that cell selection is disabled
        BookingTable.setCellSelectionEnabled(false);
        BookingTable.setColumnSelectionAllowed(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingDatabase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingDatabase(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookingTable;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JComboBox<String> PaymentStatusField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JLabel bookedCarField;
    private javax.swing.JLabel bookingIdField;
    private javax.swing.JLabel emailField;
    private javax.swing.JLabel endDateField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel paymentField;
    private javax.swing.JLabel startDateField;
    private javax.swing.JLabel statusField;
    // End of variables declaration//GEN-END:variables
}
